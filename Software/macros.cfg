[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
gcode:
  M117 Print Paused
  PAUSE_BASE
  _TOOLHEAD_PARK_PAUSE_CANCEL

   
[gcode_macro PRINT_START]
#   Use PRINT_START for the slicer starting script - please customise for your slicer of choice
gcode:
    G32                            ; home all axes
    G90                            ; absolute positioning
    G1 Z20 F3000                   ; move nozzle away from bed
   

[gcode_macro PRINT_END]
#   Use PRINT_END for the slicer ending script - please customise for your slicer of choice
gcode:
    # safe anti-stringing move coords
    {% set th = printer.toolhead %}
    {% set x_safe = th.position.x + 20 * (1 if th.axis_maximum.x - th.position.x > 20 else -1) %}
    {% set y_safe = th.position.y + 20 * (1 if th.axis_maximum.y - th.position.y > 20 else -1) %}
    {% set z_safe = [th.position.z + 2, th.axis_maximum.z]|min %}
    
    SAVE_GCODE_STATE NAME=STATE_PRINT_END
    
    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    G1 E-5.0 F1800                 ; retract filament
    
    TURN_OFF_HEATERS
    
    G90                                      ; absolute positioning
    G0 X{x_safe} Y{y_safe} Z{z_safe} F20000  ; move nozzle to remove stringing
    G0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y - 2} F3600  ; park nozzle at rear
    M107                                     ; turn off fan
    
    BED_MESH_CLEAR
    RESTORE_GCODE_STATE NAME=STATE_PRINT_END

[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
  M117 Resuming Print
  ##### read extrude from  _TOOLHEAD_PARK_PAUSE_CANCEL  macro #####
  {% set extrude = printer['gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL'].extrude %}
  #### get VELOCITY parameter if specified ####
  {% if 'VELOCITY' in params|upper %}
    {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
  {%else %}
    {% set get_params = "" %}
  {% endif %}
  ##### end of definitions #####
  {% if printer.extruder.can_extrude|lower == 'true' %}
    M83
    G1 E{extrude} F2100
    {% if printer.gcode_move.absolute_extrude |lower == 'true' %} M82 {% endif %}
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}  
  RESUME_BASE {get_params}
  STATUS_BUSY
  M117 Printing

[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
variable_park: True
gcode:
  ## Move head and retract only if not already in the pause state and park set to true
  {% if printer.pause_resume.is_paused|lower == 'false' and park|lower == 'true'%}
    _TOOLHEAD_PARK_PAUSE_CANCEL
  {% endif %}
  TURN_OFF_HEATERS
  CANCEL_PRINT_BASE
  game_over_tune
  

[gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL]
description: Helper: park toolhead used in PAUSE and CANCEL_PRINT
variable_extrude: 1.0
gcode:
  ##### set park positon for x and y #####
  # default is your max posion from your printer.cfg
  {% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}
  {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
  {% set z_park_delta = 2.0 %}
  ##### calculate save lift position #####
  {% set max_z = printer.toolhead.axis_maximum.z|float %}
  {% set act_z = printer.toolhead.position.z|float %}
  {% if act_z < (max_z - z_park_delta) %}
    {% set z_safe = z_park_delta %}
  {% else %}
    {% set z_safe = max_z - act_z %}
  {% endif %}
  ##### end of definitions #####
  {% if printer.extruder.can_extrude|lower == 'true' %}
    M83
    G1 E-{extrude} F2100
    {% if printer.gcode_move.absolute_extrude |lower == 'true' %} M82 {% endif %}
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}
  {% if "xyz" in printer.toolhead.homed_axes %}
    G91
    G1 Z{z_safe} F900
    G90
    G1 X{x_park} Y{y_park} F6000
    G1 Z395
    {% if printer.gcode_move.absolute_coordinates|lower == 'false' %} G91 {% endif %}
  {% else %}
    {action_respond_info("Printer not homed")}
  {% endif %}

[gcode_macro LEVEL_BED]
gcode:
   SCREWS_TILT_CALCULATE

[gcode_macro START_PRINT]
gcode:
  M117 Starting....
  SET_PIN PIN=chassis_light VALUE=0.65
  start_tones
  {% set BED_TEMP = params.BED_TEMP|default(60)|float %}
  {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(190)|float %}
  # Start bed heating
  M140 S{BED_TEMP}
  # Use absolute coordinates
  M117 Homing XY
  G28 XY
  G90
  # Reset the G-Code Z offset (adjust Z offset if needed)
  SET_GCODE_OFFSET Z=0.0
  #BED_MESH_CLEAR
  #CLEAN_NOZZLE
  M117 Calibrating Z
  SET_LED LED=zaxisPixel RED=1 GREEN=0 BLUE=1 TRANSMIT=1
  STATUS_CALIBRATING_Z
  #Z_TILT_ADJUST
  #G28
  # Probe Bed Mesh
  STATUS_MESHING
  SET_LED LED=zaxisPixel RED=1 GREEN=1 BLUE=1 TRANSMIT=1
  M117 Creating Bed Mesh
  BED_MESH_PROFILE LOAD=default
  BED_MESH_CALIBRATE PRINT_MIN={params.PRINT_MIN} PRINT_MAX={params.PRINT_MAX}
  #BED_MESH_CALIBRATE
  u/BEDLEVELVISUALIZER
  BED_MESH_OUTPUT
  BED_MESH_PROFILE LOAD=default
  G92 E0
  # Prime line
  G1 Z10.5 F3000
  #CLEAN_NOZZLE
  PRIME_LINE
  SET_LED LED=zaxisPixel RED=0 GREEN=1 BLUE=0 TRANSMIT=1
  TIMELAPSE_TAKE_FRAME
  STATUS_BUSY
  M117 Waiting for Heaters
  M190 S{BED_TEMP}
  M109 S{EXTRUDER_TEMP}
  M117 Printing
  #print_start_tune

[gcode_macro PRIME_LINE]
gcode: 
    STATUS_BUSY
    M117 Priming Nozzle
    G92 E0 ;Reset Extruder
    # move z axis 
    G1 Z2.0 F3000 ;Move Z Axis up
    # move to prime position 
    G1 X296 Y48  Z0.18 F5000.0     ;Move to start position
    G1 X296 Y295 Z0.18 F1500.0 E15 ;Draw the first line
    G1 X297 Y295 Z0.18 F5000.0 E15 ;Move to side a little
    G1 X297 Y48  Z0.18 F5000.0 E15 ;Draw the second line
    G1 X298 Y48  Z0.18 F5000.0 E15 ;Move to start position
    G1 X298 Y295 Z0.18 F1500.0 E30 ;Draw the first line
    G92 E0 ;Reset Extruder
    G1 X150 Y180 Z15 F5000 ;Move Z Axis up
    #CLEAN_NOZZLE
    STATUS_READY
    SET_LED LED=zaxisPixel RED=0 GREEN=0 BLUE=1 TRANSMIT=1

[gcode_macro CLEAN_NOZZLE]
gcode:
  STATUS_CLEANING
  M117 Cleaning Nozzle
  {% set wipe_count = 8 %}
  SAVE_GCODE_STATE NAME=clean_nozzle_state
  G90
  G0 Z15 F300
  {% for wipe in range(wipe_count) %}
    {% for coordinate in [(344, 40.25),(344, 86.25)] %}
      G0 X{coordinate[0]} Y{coordinate[1] + 0.25 * wipe} Z9.60 F12000
    {% endfor %}
  {% endfor %}
  G0 Z15 F300
  G0 X293 Y50 Z20 F5000
  RESTORE_GCODE_STATE NAME=clean_nozzle_state
  STATUS_READY

[gcode_macro END_PRINT]
gcode:
   M117 Print Ended
   G91
   # Retract a bit
   G1 E-2 F2700
   G1 E-2 Z0.2 F2400
   G1 X5 Y5 F3000
   # Turn off bed, extruder, and fan
   M117 All Heaters Off
   M140 S0
   M104 S0
   M106 S0
   # Raise nozzle by 10mm
   G1 Z10 F3000
   G90
   # Deliver print
   M117 Preseting Print
   G1 X0 Y235
   G1 Z395
   # Disable steppers
   M84 X Y E
   # Clear bed mesh
   BED_MESH_CLEAR
   # Turn off gcode offset
   SET_GCODE_OFFSET Z=0
   M117 Print complete
   end_tones
   SET_PIN PIN=chassis_light VALUE=0.22
   SET_LED LED=zaxisPixel RED=0.25 GREEN=0.25 BLUE=0.25 TRANSMIT=1
   STATUS_OFF

[gcode_macro BED_MESH_CALIBRATE]
rename_existing: BED_MESH_CALIBRATE_BASE
; gcode parameters
variable_parameter_AREA_START : 0,0
variable_parameter_AREA_END : 0,0
; the clearance between print area and probe area 
variable_mesh_area_offset : 5.0
; number of sample per probe point
variable_probe_samples : 2
; minimum probe count
variable_min_probe_count : 3
; scale up the probe count, should be 1.0 ~ < variable_max_probe_count/variable_min_probe_count
variable_probe_count_scale_factor : 1.0
gcode:
    {% if params.AREA_START and params.AREA_END %}
        {% set bedMeshConfig = printer["configfile"].config["bed_mesh"] %}
        {% set safe_min_x = bedMeshConfig.mesh_min.split(",")[0]|float %}
        {% set safe_min_y = bedMeshConfig.mesh_min.split(",")[1]|float %}
        {% set safe_max_x = bedMeshConfig.mesh_max.split(",")[0]|float %}
        {% set safe_max_y = bedMeshConfig.mesh_max.split(",")[1]|float %}

        {% set area_min_x = params.AREA_START.split(",")[0]|float %}
	{% set area_min_y = params.AREA_START.split(",")[1]|float %}
	{% set area_max_x = params.AREA_END.split(",")[0]|float %}
	{% set area_max_y = params.AREA_END.split(",")[1]|float %}

        {% set meshPointX = bedMeshConfig.probe_count.split(",")[0]|int %}
        {% set meshPointY = bedMeshConfig.probe_count.split(",")[1]|int %}
	
	{% set meshMaxPointX = meshPointX %}
	{% set meshMaxPointY = meshPointY %}


        {% if (area_min_x < area_max_x) and (area_min_y < area_max_y) %}
            {% if area_min_x - mesh_area_offset >=  safe_min_x %}
                {% set area_min_x = area_min_x - mesh_area_offset %}
            {% else %}
                {% set area_min_x = safe_min_x %}
            {% endif %}

            {% if area_min_y - mesh_area_offset >=  safe_min_y %}
                {% set area_min_y = area_min_y - mesh_area_offset %}
            {% else %}
                {% set area_min_y = safe_min_y %}
            {% endif %}

            {% if area_max_x + mesh_area_offset <=  safe_max_x %}
                {% set area_max_x = area_max_x + mesh_area_offset %}
            {% else %}
                {% set area_max_x = safe_max_x %}
            {% endif %}

            {% if area_max_y + mesh_area_offset <=  safe_max_y %}
                {% set area_max_y = area_max_y + mesh_area_offset %}
            {% else %}
                {% set area_max_y = safe_max_y %}
            {% endif %}

            {% set meshPointX = (meshPointX * (area_max_x - area_min_x) / (safe_max_x - safe_min_x) * probe_count_scale_factor)|round(0)|int %}
            {% if meshPointX < min_probe_count %}
                {% set meshPointX = min_probe_count %}
            {% endif %}
	    {% if meshPointX > meshMaxPointX %}
                {% set meshPointX = meshMaxPointX %}
            {% endif %}

            {% set meshPointY = (meshPointY * (area_max_y -area_min_y ) / (safe_max_y - safe_min_y) * probe_count_scale_factor )|round(0)|int %}
            {% if meshPointY < min_probe_count %}
                {% set meshPointY = min_probe_count %}
            {% endif %}
	    {% if meshPointY > meshMaxPointY %}
                {% set meshPointY = meshMaxPointY %}
            {% endif %}

            BED_MESH_CALIBRATE_BASE mesh_min={area_min_x},{area_min_y} mesh_max={area_max_x},{area_max_y} probe_count={meshPointX},{meshPointY} samples={probe_samples|int}
        {% else %}
            BED_MESH_CALIBRATE_BASE
        {% endif %}
    {% else %}
        BED_MESH_CALIBRATE_BASE
    {% endif %}


######################################################################
# Filament Change
# ######################################################################
#
# # M600: Filament Change. This macro will pause the printer, move the
# # tool to the change position, and retract the filament 50mm. Adjust
# # the retraction settings for your own extruder. After filament has
# # been changed, the print can be resumed from its previous position
# # with the "RESUME" gcode.

[pause_resume]

# Turn printer off

[gcode_macro POWER_OFF_PRINTER]
gcode:
   {action_call_remote_method("set_device_power", device="printer", state="off")}

[gcode_macro LOAD_FILAMENT]
gcode:
   M117 Load Filament
   M83                            ; set extruder to relative
   G1 E345 F1800                  ; quickly load filament to down bowden
   G1 E30 F300                    ; slower extrusion for hotend path
   G1 E15 F150                    ; prime nozzle with filament
   M82                            ; set extruder to absolute
    
[gcode_macro UNLOAD_FILAMENT]
gcode:
   M117 Unload Filament
   M83                            ; set extruder to relative
   G1 E10 F300                    ; extrude a little to soften tip
   G1 E-380 F1800                 ; retract filament completely
   M82                            ; set extruder to absolute

[gcode_macro FILAMENT_RUNOUT]
gcode:
  M117 Filament Runout
  M300 S1 P10
  M600
  M300 S1 P10
  SET_LED LED=fysetc_mini12864 RED=0.5 GREEN=0.5 BLUE=1 TRANSMIT=0
  SET_LED LED=zaxisPixel RED=0.5 GREEN=0.5 BLUE=1 TRANSMIT=0
  SET_LED LED=hotend_rgb RED=0.5 GREEN=0.5 BLUE=1 TRANSMIT=1

[gcode_macro TEST_SPEED]
#
# TEST_SPEED
# 
# Home, get position, throw around toolhead, home again.
# If MCU stepper positions (first line in GET_POSITION) are greater than a full step different (your number of microsteps), then skipping occured.
# We only measure to a full step to accomodate for endstop variance.
# Example: TEST_SPEED SPEED=300 ACCEL=5000 ITERATIONS=10
description: Perform a speed test SPEED=300 ACCEL=5000 ITERATIONS=10
gcode:
	# Speed
	{% set speed  = params.SPEED|default(printer.configfile.settings.printer.max_velocity)|int %}
	# Iterations
	{% set iterations = params.ITERATIONS|default(5)|int %}
	# Acceleration
	{% set accel  = params.ACCEL|default(printer.configfile.settings.printer.max_accel)|int %}
	# Bounding box (in case the machine min/maxes are not perfect)
	{% set bound = params.BOUND|default(20)|int %}
	
	# Set speed test bounds (machine minimum/maximum positions, inset by the bounding box)
	{% set x_min = printer.toolhead.axis_minimum.x + bound %}
	{% set x_max = printer.toolhead.axis_maximum.x - bound %}
	{% set y_min = printer.toolhead.axis_minimum.y + bound %}
	{% set y_max = printer.toolhead.axis_maximum.y - bound %}

	# Save current gcode state (absolute/relative, etc)
	SAVE_GCODE_STATE NAME=TEST_SPEED
	
	# Absolute positioning
	G90
	
	# Set new limits
	SET_VELOCITY_LIMIT VELOCITY={speed} ACCEL={accel} ACCEL_TO_DECEL={accel / 2}

	# Home and get position for comparison later:
		G28
		# QGL if not already QGLd (only if QGL section exists in config)
		{% if printer.configfile.settings.quad_gantry_level %}
			{% if printer.quad_gantry_level.applied == False %}
				QUAD_GANTRY_LEVEL
				G28 Z
			{% endif %}
		{% endif %}	
		G0 X{printer.toolhead.axis_maximum.x} Y{printer.toolhead.axis_maximum.y} F{30 * 60}
		G4 P1000 
		GET_POSITION

	# Go to starting position
	G0 X{x_min} Y{y_min} Z{bound + 10} F{speed * 60}

	{% for i in range(iterations) %}
		# Diagonals
		G0 X{x_min} Y{y_min} F{speed * 60}
		G0 X{x_max} Y{y_max} F{speed * 60}
		G0 X{x_min} Y{y_min} F{speed * 60}
		G0 X{x_max} Y{y_min} F{speed * 60}
		G0 X{x_min} Y{y_max} F{speed * 60}
		G0 X{x_max} Y{y_min} F{speed * 60}
		
		# Box
		G0 X{x_min} Y{y_min} F{speed * 60}
		G0 X{x_min} Y{y_max} F{speed * 60}
		G0 X{x_max} Y{y_max} F{speed * 60}
		G0 X{x_max} Y{y_min} F{speed * 60}
	{% endfor %}

	# Restore max speed/accel/accel_to_decel to their configured values
	SET_VELOCITY_LIMIT VELOCITY={printer.configfile.settings.printer.max_velocity} ACCEL={printer.configfile.settings.printer.max_accel} ACCEL_TO_DECEL={printer.configfile.settings.printer.max_accel_to_decel} 

	# Re-home XY and get position again for comparison:
		G28 X Y
		# Go to XY home positions (in case your homing override leaves it elsewhere)
		G0 X{printer.toolhead.axis_maximum.x} Y{printer.toolhead.axis_maximum.y} F{30 * 60}
		G4 P1000 
		GET_POSITION

	# Restore previous gcode state (absolute/relative, etc)
	RESTORE_GCODE_STATE NAME=TEST_SPEED

[gcode_macro start_tones]
description: chirp to indicate starting
gcode:
  M300 S1000 P500
  M300 S440  P200
  M300 S220  P100

[gcode_macro print_start_tune]
description: tune to indicate starting to print
gcode:
  M300 S1000 P500
  M300 S440  P200
  M300 S220  P250
  M300 S440  P200
  M300 S220  P250
  M300 S440  P200
  M300 S1000 P1000

[gcode_macro end_tones]
description: Make Print Completed Tones
gcode:
  M300 S440 P200 
  M300 S660 P250
  M300 S880 P300

[gcode_macro end_tune]
description: Ending tune
gcode:
  M300 S3135 P75
  M300 S3135 P150
  M300 S1760 P150
  M300 S1760 P150
  M300 S2637 P150
  M300 S2637 P150
  M300 S3135 P150

[gcode_macro change_tune]
description: Change filament tune
gcode:
  M300 S440 P200
  M300 S660 P250
  M300 S880 P300

[gcode_macro mesh_tune]
description: Bed meshing
gcode:
  M300 S440 P200
  M300 S880 P300
  M300 S660 P250

[gcode_macro starter_tune]
description: Boot up Tune
gcode:
  M300 S1174 P125
  M300 S1174 P125
  M300 S2349 P125
  M300 S0 P125
  M300 S880 P187
  M300 S0 P187
  M300 S1661 P125
  M300 S1567 P125
  M300 S0 P125
  M300 S1396 P250
  M300 S1174 P125
  M300 S1396 P125
  M300 S1567 P125
  M300 S1046 P125
  M300 S1046 P125
  M300 S2349 P125
  M300 S0 P125
  M300 S880 P187
  M300 S0 P187
  M300 S1661 P125
  M300 S1567 P125
  M300 S0 P125
  M300 S1396 P250
  M300 S1174 P125
  M300 S1396 P125
  M300 S1567 P125
  M300 S493 P125
  M300 S493 P125
  M300 S2349 P125
  M300 S0 P125
  M300 S880 P187
  M300 S0 P187
  M300 S1661 P125
  M300 S1567 P125
  M300 S0 P125
  M300 S1396 P250
  M300 S1174 P125
  M300 S1396 P125
  M300 S1567 P125
  M300 S466 P125
  M300 S466 P125
  M300 S2349 P125
  M300 S0 P125
  M300 S880 P187
  M300 S0 P187
  M300 S1661 P125
  M300 S1567 P125
  M300 S0 P125
  M300 S1396 P250
  M300 S1174 P125
  M300 S1396 P125
  M300 S1567 P125

[gcode_macro cena_tune]
gcode:
  M300 S2800 P300
  M300 S2900 P100
  M300 S2400 P250
  M300 S2700 P1500
  M300 s3000 P300
  M300 S2900 P100
  M300 S2400 P250
  M300 S2700 P1500
  M300 S2800 P300
  M300 S2900 P100
  M300 S2400 P250
  M300 S2700 P1500
  M300 s3000 P300
  M300 S2900 P100
  M300 S2400 P250
  M300 S2700 P1500

[gcode_macro mario_tune]
description: Super Mario level completed tune
gcode:
  M300 S1046 P150
  M300 S1318 P150
  M300 S1567 P150
  M300 S2093 P150
  M300 S2637 P150
  M300 S3135 P400
  M300 S2637 P400
  M300 S1046 P150
  M300 S1244 P150
  M300 S1661 P150
  M300 S2093 P150
  M300 S2489 P150
  M300 S3322 P400
  M300 S2489 P400
  M300 S1174 P150
  M300 S1396 P150
  M300 S932 P150
  M300 S2349 P150
  M300 S2793 P150
  M300 S1864 P150
  M300 S0 P400
  M300 S1864 P120
  M300 S0 P60
  M300 S1864 P120
  M300 S0 P60
  M300 S1864 P120
  M300 S0 P60
  M300 S4186 P900 ;Congrats

[gcode_macro game_over_tune]
description: Super Mario game over tune
gcode:
  M300 P200 S523
  M300 P200 S0
  M300 P200 S392
  M300 P200 S0
  M300 P300 S330
  M300 P233 S440
  M300 P233 S494
  M300 P233 S440
  M300 P300 S415
  M300 P300 S466
  M300 P300 S415
  M300 P150 S392
  M300 P150 S349
  M300 P1800 S392

[gcode_macro be_mine_tune]
gcode:
  M300 S440 P200 ;A4: 440
  M300 S0 P200 ;
  M300 S440 P200 ;A4: 440
  M300 S330 P200 ;E4: 330
  M300 S392 P200 ;G4: 392
  M300 S440 P200 ;A4: 440
  M300 S0 P200 ;
  M300 S440 P200 ;A4: 440
  M300 S0 P200 ;
  M300 S524 P200 ;C5: 524
  M300 S588 P200 ;D5: 588
  M300 S524 P200 ;C5: 524
  M300 S588 P200 ;D5: 588
  M300 S524 P200 ;C5: 524
  M300 S440 P200 ;A4: 440
  M300 S392 P200 ;G4: 392
  ;------------------------
  M300 S440 P200 ;A4: 440
  M300 S0 P200 ;
  M300 S440 P200 ;A4: 440
  M300 S330 P200 ;E4: 330
  M300 S392 P200 ;G4: 392
  M300 S440 P200 ;A4: 440
  M300 S0 P200 ;
  M300 S440 P200 ;A4: 440
  M300 S0 P200 ;
  M300 S524 P200 ;C5: 524
  M300 S588 P200 ;D5: 588
  M300 S524 P200 ;C5: 524
  M300 S588 P200 ;D5: 588
  M300 S524 P200 ;C5: 524
  M300 S440 P200 ;A4: 440
  M300 S392 P200 ;G4: 392
  ;------------------------
  M300 S440 P800 ;A4: 440

[gcode_macro sweet_child_tune]
description: Sweet Child of Mine
gcode:
  M300 S294 P200 ;D4: 294
  M300 S588 P200 ;D5: 588
  M300 S440 P200 ;A4: 440
  M300 S392 P200 ;G4: 392
  M300 S784 P200 ;G5: 784
  M300 S440 P200 ;A4: 440
  M300 S740 P200 ;F#5: 740
  M300 S440 P200 ;A4: 440
  ;------------------------
  M300 S294 P200 ;D4: 294
  M300 S588 P200 ;D5: 588
  M300 S440 P200 ;A4: 440
  M300 S392 P200 ;G4: 392
  M300 S784 P200 ;G5: 784
  M300 S440 P200 ;A4: 440
  M300 S740 P200 ;F#5: 740
  M300 S440 P200 ;A4: 440
  ;------------------------
  M300 S330 P200 ;E4: 330
  M300 S588 P200 ;D5: 588
  M300 S440 P200 ;A4: 440
  M300 S392 P200 ;G4: 392
  M300 S784 P200 ;G5: 784
  M300 S440 P200 ;A4: 440
  M300 S740 P200 ;F#5: 740
  M300 S440 P200 ;A4: 440
  ;------------------------
  M300 S330 P200 ;E4: 330
  M300 S588 P200 ;D5: 588
  M300 S440 P200 ;A4: 440
  M300 S392 P200 ;G4: 392
  M300 S784 P200 ;G5: 784
  M300 S440 P200 ;A4: 440
  M300 S740 P200 ;F#5: 740
  M300 S440 P200 ;A4: 440
  ;------------------------
  M300 S392 P200 ;G4: 392
  M300 S588 P200 ;D5: 588
  M300 S440 P200 ;A4: 440
  M300 S392 P200 ;G4: 392
  M300 S784 P200 ;G5: 784
  M300 S440 P200 ;A4: 440
  M300 S740 P200 ;F#5: 740
  M300 S440 P200 ;A4: 440
  ;------------------------
  M300 S392 P200 ;G4: 392
  M300 S588 P200 ;D5: 588
  M300 S440 P200 ;A4: 440
  M300 S392 P200 ;G4: 392
  M300 S784 P200 ;G5: 784
  M300 S440 P200 ;A4: 440
  M300 S740 P200 ;F#5: 740
  M300 S440 P200 ;A4: 440
  ;------------------------
  M300 S294 P800 ;D4: 294



